import os
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import (
    ApplicationBuilder, CommandHandler, ContextTypes,
    CallbackQueryHandler, MessageHandler, filters
)
from api.actions import parse_and_save_listing  

TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")

# –í—ñ—Ç–∞–ª—å–Ω–∏–π —Ç–µ–∫—Å—Ç
WELCOME_MESSAGE = (
    "üè† *–í—ñ—Ç–∞—î–º–æ —É RentFlatBot!*\n\n"
    "–ù–∞–ª–∞—à—Ç—É–π –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –ø–æ—à—É–∫—É –≤—Å—å–æ–≥–æ –∑–∞ –æ–¥–∏–Ω –∫—Ä–æ–∫ ‚Äî —ñ —è –Ω–∞–¥—Å–∏–ª–∞—Ç–∏–º—É —Ç–æ–±—ñ –Ω–æ–≤—ñ –∫–≤–∞—Ä—Ç–∏—Ä–∏ –∑ –±—ñ–ª—å—à–æ—Å—Ç—ñ —Ç–µ–ª–µ–≥—Ä–∞–º-–∫–∞–Ω–∞–ª—ñ–≤ —â–æ–π–Ω–æ –≤–æ–Ω–∏ –∑'—è–≤–ª—è—Ç—å—Å—è.\n\n"
    "–Ø —Ç—É—Ç, —â–æ–± –∑—Ä–æ–±–∏—Ç–∏ –ø–æ—à—É–∫ –∫–≤–∞—Ä—Ç–∏—Ä–∏ –∑—Ä—É—á–Ω–∏–º. –°–ø—Ä–æ–±—É–π! üòä"
)

# –ú–µ–Ω—é: —Ç–∏–ø –ø–æ—à—É–∫—É
def main_menu():
    return InlineKeyboardMarkup([
        [InlineKeyboardButton("üîç –û–±—Ä–∞—Ç–∏ —Ç–∏–ø –ø–æ—à—É–∫—É", callback_data="choose_search_type")],
        [InlineKeyboardButton("üõ† –ü–æ—á–∞—Ç–∏ –ø–æ—à—É–∫", callback_data="start_search")]
    ])

# –ú–µ–Ω—é: –∫—ñ–º–Ω–∞—Ç–∏
def rooms_menu():
    return InlineKeyboardMarkup([
        [InlineKeyboardButton("1 –∫—ñ–º–Ω–∞—Ç–∞", callback_data="rooms_1")],
        [InlineKeyboardButton("2 –∫—ñ–º–Ω–∞—Ç–∏", callback_data="rooms_2")],
        [InlineKeyboardButton("3 –∫—ñ–º–Ω–∞—Ç–∏", callback_data="rooms_3")],
        [InlineKeyboardButton("4+ –∫—ñ–º–Ω–∞—Ç–∏", callback_data="rooms_4_plus")],
        [InlineKeyboardButton("‚Ü© –ù–∞–∑–∞–¥ –¥–æ —Ä–∞–π–æ–Ω—ñ–≤", callback_data="by_district")]
    ])

# –ú–µ–Ω—é —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤
def edit_menu():
    return InlineKeyboardMarkup([
        [InlineKeyboardButton("üìç –ó–º—ñ–Ω–∏—Ç–∏ —Ä–∞–π–æ–Ω", callback_data="edit_district")],
        [InlineKeyboardButton("üõè –ó–º—ñ–Ω–∏—Ç–∏ –∫—ñ–º–Ω–∞—Ç–∏", callback_data="edit_rooms")],
        [InlineKeyboardButton("üí∞ –ó–º—ñ–Ω–∏—Ç–∏ –±—é–¥–∂–µ—Ç", callback_data="edit_budget")],
        [InlineKeyboardButton("üßπ –°–∫–∏–Ω—É—Ç–∏ –≤—Å–µ", callback_data="reset_all")],
        [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="main_menu")]
    ])

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data.clear()
    await update.message.reply_text(WELCOME_MESSAGE, parse_mode="Markdown", reply_markup=main_menu())

# –û–±—Ä–æ–±–∫–∞ –Ω–∞—Ç–∏—Å–∫–∞–Ω—å –∫–Ω–æ–ø–æ–∫
async def handle_buttons(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    if query.data == "choose_search_type":
        keyboard = InlineKeyboardMarkup([
            [InlineKeyboardButton("üèò –ü–æ —Ä–∞–π–æ–Ω–∞—Ö", callback_data="by_district")],
            [InlineKeyboardButton("üèô –ü–æ –ñ–ö", callback_data="by_complex")]
        ])
        await query.edit_message_text("–û–±–µ—Ä—ñ—Ç—å —Ç–∏–ø –ø–æ—à—É–∫—É:", reply_markup=keyboard)

    elif query.data == "by_district":
        keyboard = InlineKeyboardMarkup([
            [InlineKeyboardButton("üîÑ –í—Å–µ –º—ñ—Å—Ç–æ", callback_data="district_all")],
            [InlineKeyboardButton("üìç –°–∏—Ö—ñ–≤—Å—å–∫–∏–π", callback_data="district_sykhiv")],
            [InlineKeyboardButton("üìç –ë—Ä—é—Ö–æ–≤–∏—á—ñ", callback_data="district_briukhovychi")],
            [InlineKeyboardButton("üìç –ì–∞–ª–∏—Ü—å–∫–∏–π", callback_data="district_halytskyi")],
            [InlineKeyboardButton("üìç –°–æ–∫—ñ–ª—å–Ω–∏–∫–∏", callback_data="district_sokilnyky")],
            [InlineKeyboardButton("üìç –ó–∞–ª—ñ–∑–Ω–∏—á–Ω–∏–π", callback_data="district_zaliznychnyi")],
            [InlineKeyboardButton("üìç –õ–∏—Å–∏–Ω–∏—á—ñ", callback_data="district_lysychnychi")],
            [InlineKeyboardButton("üìç –õ–∏—á–∞–∫—ñ–≤—Å—å–∫–∏–π", callback_data="district_lychakivskyi")],
            [InlineKeyboardButton("üìç –í–∏–Ω–Ω–∏–∫–∏", callback_data="district_vynnyky")],
            [InlineKeyboardButton("üìç –®–µ–≤—á–µ–Ω–∫—ñ–≤—Å—å–∫–∏–π", callback_data="district_shevchenkivskyi")],
            [InlineKeyboardButton("üìç –§—Ä–∞–Ω–∫—ñ–≤—Å—å–∫–∏–π", callback_data="district_frankivskyi")],
            [InlineKeyboardButton("‚Ü© –ù–∞–∑–∞–¥", callback_data="choose_search_type")]
        ])
        await query.edit_message_text("–û–±–µ—Ä—ñ—Ç—å —Ä–∞–π–æ–Ω:", reply_markup=keyboard)

    elif query.data == "by_complex":
        keyboard = InlineKeyboardMarkup([
            [InlineKeyboardButton("üè¢ –ñ–ö –í–µ–ª–∏–∫–∞ –ë—Ä–∏—Ç–∞–Ω—ñ—è", callback_data="complex_britania")],
            [InlineKeyboardButton("üè¢ –ñ–ö –°–æ—Ñ—ñ—ó–≤–∫–∞", callback_data="complex_sofiivka")],
            [InlineKeyboardButton("üè¢ –ñ–ö –ü–∞—Ä—É—Å", callback_data="complex_parus")],
            [InlineKeyboardButton("üè¢ –ñ–ö –ê–≤–∞–ª–æ–Ω", callback_data="complex_avalon")],
            [InlineKeyboardButton("üè¢ –ñ–ö –©–∞—Å–ª–∏–≤–∏–π", callback_data="complex_shchaslyvyi")],
            [InlineKeyboardButton("‚Ü© –ù–∞–∑–∞–¥", callback_data="choose_search_type")]
        ])
        await query.edit_message_text("–û–±–µ—Ä—ñ—Ç—å –∂–∏—Ç–ª–æ–≤–∏–π –∫–æ–º–ø–ª–µ–∫—Å:", reply_markup=keyboard)

    elif query.data.startswith("district_"):
        selected = query.data.replace("district_", "")
        if selected == "all":
            selected = "–í—Å–µ –º—ñ—Å—Ç–æ"
        else:
            selected = selected.capitalize()
        context.user_data["district"] = selected
        context.user_data.pop("complex", None)
        await query.edit_message_text(
            f"‚úÖ –í–∏ –æ–±—Ä–∞–ª–∏ —Ä–∞–π–æ–Ω: *{selected}*\n\n–¢–µ–ø–µ—Ä –æ–±–µ—Ä—ñ—Ç—å –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫—ñ–º–Ω–∞—Ç:",
            parse_mode="Markdown",
            reply_markup=rooms_menu()
        )

    elif query.data.startswith("complex_"):
        selected = query.data.replace("complex_", "").capitalize()
        context.user_data["complex"] = selected
        context.user_data.pop("district", None)
        await query.edit_message_text(
            f"‚úÖ –í–∏ –æ–±—Ä–∞–ª–∏ –ñ–ö: *{selected}*\n\n–¢–µ–ø–µ—Ä –æ–±–µ—Ä—ñ—Ç—å –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫—ñ–º–Ω–∞—Ç:",
            parse_mode="Markdown",
            reply_markup=rooms_menu()
        )

    elif query.data.startswith("rooms_"):
        rooms = query.data.replace("rooms_", "").replace("_plus", "+")
        context.user_data["rooms"] = rooms
        district = context.user_data.get('district') or context.user_data.get('complex') or "–Ω–µ –æ–±—Ä–∞–Ω–æ"
        await query.edit_message_text(
            f"üè° –û–±—Ä–∞–Ω–æ: *{district}*, –∫—ñ–º–Ω–∞—Ç: *{rooms}*\n\n"
            "–¢–µ–ø–µ—Ä –≤–≤–µ–¥—ñ—Ç—å –±—é–¥–∂–µ—Ç:\n\n"
            "`–≤—ñ–¥` —ñ `–¥–æ` —á–µ—Ä–µ–∑ –ø—Ä–æ–±—ñ–ª –∞–±–æ –Ω–æ–≤–∏–π —Ä—è–¥–æ–∫\n\n"
            "–ù–∞–ø—Ä–∏–∫–ª–∞–¥: `8000 15000`",
            parse_mode="Markdown"
        )
        context.user_data["awaiting_budget"] = True

    elif query.data == "start_search":
        await query.edit_message_text("üîé –ü–æ—à—É–∫ —Ä–æ–∑–ø–æ—á–∞—Ç–æ!\n(–ü–æ–∫–∏ —â–æ –≤ –¥–µ–º–æ-—Ä–µ–∂–∏–º—ñ)")

    elif query.data == "edit_params":
        await query.edit_message_text("–©–æ —Ö–æ—á–µ—à –∑–º—ñ–Ω–∏—Ç–∏?", reply_markup=edit_menu())

    elif query.data == "edit_district":
        keyboard = InlineKeyboardMarkup([
            [InlineKeyboardButton("üîÑ –í—Å–µ –º—ñ—Å—Ç–æ", callback_data="district_all")],
            [InlineKeyboardButton("üìç –°–∏—Ö—ñ–≤—Å—å–∫–∏–π", callback_data="district_sykhiv")],
            [InlineKeyboardButton("üìç –ë—Ä—é—Ö–æ–≤–∏—á—ñ", callback_data="district_briukhovychi")],
            [InlineKeyboardButton("üìç –ì–∞–ª–∏—Ü—å–∫–∏–π", callback_data="district_halytskyi")],
            [InlineKeyboardButton("üìç –°–æ–∫—ñ–ª—å–Ω–∏–∫–∏", callback_data="district_sokilnyky")],
            [InlineKeyboardButton("üìç –ó–∞–ª—ñ–∑–Ω–∏—á–Ω–∏–π", callback_data="district_zaliznychnyi")],
            [InlineKeyboardButton("üìç –õ–∏—Å–∏–Ω–∏—á—ñ", callback_data="district_lysychnychi")],
            [InlineKeyboardButton("üìç –õ–∏—á–∞–∫—ñ–≤—Å—å–∫–∏–π", callback_data="district_lychakivskyi")],
            [InlineKeyboardButton("üìç –í–∏–Ω–Ω–∏–∫–∏", callback_data="district_vynnyky")],
            [InlineKeyboardButton("üìç –®–µ–≤—á–µ–Ω–∫—ñ–≤—Å—å–∫–∏–π", callback_data="district_shevchenkivskyi")],
            [InlineKeyboardButton("üìç –§—Ä–∞–Ω–∫—ñ–≤—Å—å–∫–∏–π", callback_data="district_frankivskyi")],
            [InlineKeyboardButton("‚Ü© –ù–∞–∑–∞–¥", callback_data="edit_params")]
        ])
        await query.edit_message_text("–û–±–µ—Ä—ñ—Ç—å –Ω–æ–≤–∏–π —Ä–∞–π–æ–Ω:", reply_markup=keyboard)

    elif query.data == "edit_rooms":
        await query.edit_message_text("–û–±–µ—Ä—ñ—Ç—å –Ω–æ–≤—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫—ñ–º–Ω–∞—Ç:", reply_markup=rooms_menu())

    elif query.data == "edit_budget":
        context.user_data["awaiting_budget"] = True
        await query.edit_message_text(
            "–í–≤–µ–¥—ñ—Ç—å –Ω–æ–≤–∏–π –±—é–¥–∂–µ—Ç:\n\n–ù–∞–ø—Ä–∏–∫–ª–∞–¥: `10000 25000`",
            parse_mode="Markdown"
        )

    elif query.data == "reset_all":
        context.user_data.clear()
        await query.edit_message_text(
            "‚ö†Ô∏è –£—Å—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ —Å–∫–∏–Ω—É—Ç–æ. –ü–æ—á–Ω—ñ–º–æ —Å–ø–æ—á–∞—Ç–∫—É üôÇ",
            reply_markup=main_menu()
        )

    elif query.data == "main_menu":
        await query.edit_message_text("üîΩ –û–±–µ—Ä–∏ –æ–ø—Ü—ñ—ó –Ω–∏–∂—á–µ:", reply_markup=main_menu())

# –û–±—Ä–æ–±–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å (–∑–æ–∫—Ä–µ–º–∞ –±—é–¥–∂–µ—Ç—É —Ç–∞ –æ–≥–æ–ª–æ—à–µ–Ω—å)
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if context.user_data.get("awaiting_budget"):
        try:
            parts = update.message.text.replace("\n", " ").split()
            if len(parts) != 2:
                raise ValueError("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç")
            min_budget = int(parts[0])
            max_budget = int(parts[1])
            context.user_data["min_budget"] = min_budget
            context.user_data["max_budget"] = max_budget
            context.user_data["awaiting_budget"] = False

            district = context.user_data.get('district') or context.user_data.get('complex') or "–Ω–µ –æ–±—Ä–∞–Ω–æ"
            rooms = context.user_data.get('rooms') or "–Ω–µ –æ–±—Ä–∞–Ω–æ"

            summary = (
                f"‚úÖ –û–±—Ä–∞–Ω–æ:\n"
                f"‚Ä¢ –†–∞–π–æ–Ω/–ñ–ö: *{district}*\n"
                f"‚Ä¢ –ö—ñ–º–Ω–∞—Ç: *{rooms}*\n"
                f"‚Ä¢ –ë—é–¥–∂–µ—Ç: *{min_budget} ‚Äì {max_budget} –≥—Ä–Ω*\n\n"
                f"–ù–∞—Ç–∏—Å–Ω–∏ 'üõ† –ü–æ—á–∞—Ç–∏ –ø–æ—à—É–∫' —â–æ–± —Ä–æ–∑–ø–æ—á–∞—Ç–∏."
            )

            await update.message.reply_text(
                summary + "\n\nüîÑ –¢–∏ –º–æ–∂–µ—à –∑–º—ñ–Ω–∏—Ç–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –∞–±–æ –∑–∞–ø—É—Å—Ç–∏—Ç–∏ –ø–æ—à—É–∫.",
                parse_mode="Markdown",
                reply_markup=InlineKeyboardMarkup([
                    [InlineKeyboardButton("üõ† –ü–æ—á–∞—Ç–∏ –ø–æ—à—É–∫", callback_data="start_search")],
                    [InlineKeyboardButton("üîÑ –ó–º—ñ–Ω–∏—Ç–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏", callback_data="edit_params")]
                ])
            )

        except Exception:
            await update.message.reply_text(
                "‚ùå –í–≤–µ–¥—ñ—Ç—å *–¥–≤–∞* —á–∏—Å–ª–∞: –º—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–π —ñ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∏–π –±—é–¥–∂–µ—Ç (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥ `10000 20000`)",
                parse_mode="Markdown"
            )
    else:
    
        text = update.message.text
        await parse_and_save_listing(text)
        await update.message.reply_text("–î—è–∫—É—é! –û–≥–æ–ª–æ—à–µ–Ω–Ω—è –æ—Ç—Ä–∏–º–∞–Ω–æ —ñ –æ–±—Ä–æ–±–ª–µ–Ω–æ.")


if __name__ == "__main__":
    app = ApplicationBuilder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CallbackQueryHandler(handle_buttons))
    app.add_handler(MessageHandler(filters.TEXT & (~filters.COMMAND), handle_message))

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ...")
    app.run_polling()
